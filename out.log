root@ubuntu-16gb-hel1-1:~/grover# INSTRUMENT_FUEL=1 INSTRUMENT_RTSIG=1 catalyst --fuel-rt-sig --tool=llc circuit.ll
=== FUEL RTSIG: Starting runFuelRTSigPasses function ===
=== FUEL RTSIG: About to create PassManager ===
=== FUEL RTSIG: About to create fuel pass ===
=== FUEL RTSIG: Adding fuel pass to manager ===
=== FUEL RTSIG: About to run pass manager ===
=== FUEL RTSIG LLVM PASS: Running on LLVM IR ===
Created global variables
Created helper functions
Instrumenting function: jit_circuit_qjit
Custom cost for _mlir_memref_to_llvm_alloc: 150
Instrumenting function: _catalyst_pyface_jit_circuit_qjit
Instrumenting function: _catalyst_ciface_jit_circuit_qjit
Instrumenting function: circuit_qjit_0
Custom cost for __catalyst__rt__device_init: 1000
Custom cost for __catalyst__rt__qubit_allocate_array: 200
Custom cost for __catalyst__rt__array_get_element_ptr_1d: 10
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__rt__array_get_element_ptr_1d: 10
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__rt__array_get_element_ptr_1d: 10
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__rt__array_get_element_ptr_1d: 10
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__PauliX: 50
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__PauliX: 50
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__PauliX: 50
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__GlobalPhase: 25
Custom cost for __catalyst__qis__PauliX: 50
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__PauliX: 50
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__PauliX: 50
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__GlobalPhase: 25
Custom cost for __catalyst__qis__PauliX: 50
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__PauliX: 50
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__PauliX: 50
Custom cost for __catalyst__qis__PauliZ: 50
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__Hadamard: 100
Custom cost for __catalyst__qis__GlobalPhase: 25
Custom cost for _mlir_memref_to_llvm_alloc: 150
Custom cost for __catalyst__qis__Probs: 500
Custom cost for __catalyst__rt__qubit_release_array: 100
Custom cost for __catalyst__rt__device_release: 500
Instrumenting function: setup
Custom cost for __catalyst__rt__initialize: 800
Instrumenting function: teardown
Custom cost for __catalyst__rt__finalize: 400
=== FUEL RTSIG LLVM PASS: Completed ===
=== FUEL RTSIG: Pass manager completed, modified=1 ===
=== FUEL RTSIG: runFuelRTSigPasses completed successfully ===
; ModuleID = 'catalyst_module'
source_filename = "LLVMDialectModule"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128-Fn32"
target triple = "aarch64-unknown-linux-gnu"

@"{'mcmc': False, 'num_burnin': 0, 'kernel_name': None}" = internal constant [54 x i8] c"{'mcmc': False, 'num_burnin': 0, 'kernel_name': None}\00"
@LightningSimulator = internal constant [19 x i8] c"LightningSimulator\00"
@"/usr/local/lib/python3.12/dist-packages/pennylane_lightning/liblightning_qubit_catalyst.so" = internal constant [91 x i8] c"/usr/local/lib/python3.12/dist-packages/pennylane_lightning/liblightning_qubit_catalyst.so\00"
@__fuel_remaining = global i64 10000
@__runtime_signature = global i64 5497854278205459532

declare void @__catalyst__rt__finalize()

declare void @__catalyst__rt__initialize(ptr)

declare void @__catalyst__rt__device_release()

declare void @__catalyst__rt__qubit_release_array(ptr)

declare void @__catalyst__qis__Probs(ptr, i64, ...)

declare void @__catalyst__qis__GlobalPhase(double, ptr)

declare void @__catalyst__qis__PauliZ(ptr, ptr)

declare void @__catalyst__qis__PauliX(ptr, ptr)

declare void @__catalyst__qis__Hadamard(ptr, ptr)

declare ptr @__catalyst__rt__array_get_element_ptr_1d(ptr, i64)

declare ptr @__catalyst__rt__qubit_allocate_array(i64)

declare void @__catalyst__rt__device_init(ptr, ptr, ptr, i64, i1)

declare ptr @_mlir_memref_to_llvm_alloc(i64)

define { ptr, ptr, i64, [1 x i64], [1 x i64] } @jit_circuit_qjit() {
  call void @__check_fuel(i64 13)
  %1 = load i64, ptr @__runtime_signature, align 8
  %2 = xor i64 %1, -6592150666558970185
  store i64 %2, ptr @__runtime_signature, align 8
  %3 = call { ptr, ptr, i64, [1 x i64], [1 x i64] } @circuit_qjit_0()
  %4 = extractvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %3, 0
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 3735928559, %5
  br i1 %6, label %7, label %22

7:                                                ; preds = %0
  call void @__check_fuel(i64 203)
  %8 = load i64, ptr @__runtime_signature, align 8
  %9 = xor i64 %8, 3401485296881216981
  store i64 %9, ptr @__runtime_signature, align 8
  %10 = call ptr @_mlir_memref_to_llvm_alloc(i64 128)
  %11 = insertvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } poison, ptr %10, 0
  %12 = insertvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %11, ptr %10, 1
  %13 = insertvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %12, i64 0, 2
  %14 = insertvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %13, i64 16, 3, 0
  %15 = insertvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %14, i64 1, 4, 0
  %16 = extractvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %3, 3, 0
  %17 = mul i64 %16, 1
  %18 = mul i64 %17, 8
  %19 = extractvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %3, 1
  %20 = extractvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %3, 2
  %21 = getelementptr inbounds double, ptr %19, i64 %20
  call void @llvm.memcpy.p0.p0.i64(ptr %10, ptr %21, i64 %18, i1 false)
  br label %25

22:                                               ; preds = %0
  %23 = load i64, ptr @__runtime_signature, align 8
  %24 = xor i64 %23, -8974279612456865903
  store i64 %24, ptr @__runtime_signature, align 8
  br label %25

25:                                               ; preds = %22, %7
  %26 = load i64, ptr @__runtime_signature, align 8
  %27 = xor i64 %26, 571057307809239569
  store i64 %27, ptr @__runtime_signature, align 8
  %28 = phi { ptr, ptr, i64, [1 x i64], [1 x i64] } [ %3, %22 ], [ %15, %7 ]
  br label %29

29:                                               ; preds = %25
  %30 = load i64, ptr @__runtime_signature, align 8
  %31 = xor i64 %30, -8974279612456865903
  store i64 %31, ptr @__runtime_signature, align 8
  ret { ptr, ptr, i64, [1 x i64], [1 x i64] } %28
}

define void @_catalyst_pyface_jit_circuit_qjit(ptr %0, ptr %1) {
  call void @__check_fuel(i64 12)
  %3 = load i64, ptr @__runtime_signature, align 8
  %4 = xor i64 %3, 2145513512370476857
  store i64 %4, ptr @__runtime_signature, align 8
  call void @_catalyst_ciface_jit_circuit_qjit(ptr %0)
  ret void
}

define void @_catalyst_ciface_jit_circuit_qjit(ptr %0) {
  call void @__check_fuel(i64 13)
  %2 = load i64, ptr @__runtime_signature, align 8
  %3 = xor i64 %2, -8830096850998403284
  store i64 %3, ptr @__runtime_signature, align 8
  %4 = call { ptr, ptr, i64, [1 x i64], [1 x i64] } @jit_circuit_qjit()
  store { ptr, ptr, i64, [1 x i64], [1 x i64] } %4, ptr %0, align 8
  ret void
}

define internal { ptr, ptr, i64, [1 x i64], [1 x i64] } @circuit_qjit_0() {
  call void @__check_fuel(i64 6318)
  %1 = load i64, ptr @__runtime_signature, align 8
  %2 = xor i64 %1, -7209263574287611189
  store i64 %2, ptr @__runtime_signature, align 8
  %3 = alloca { ptr, ptr, i64, [1 x i64], [1 x i64] }, i64 1, align 8
  %4 = alloca i1, i64 3, align 1
  %5 = alloca ptr, i64 3, align 8
  %6 = alloca { i1, i64, ptr, ptr }, i64 1, align 8
  %7 = alloca i1, i64 3, align 1
  %8 = alloca ptr, i64 3, align 8
  %9 = alloca { i1, i64, ptr, ptr }, i64 1, align 8
  %10 = alloca i1, i64 3, align 1
  %11 = alloca ptr, i64 3, align 8
  %12 = alloca { i1, i64, ptr, ptr }, i64 1, align 8
  %13 = alloca i1, i64 3, align 1
  %14 = alloca ptr, i64 3, align 8
  %15 = alloca { i1, i64, ptr, ptr }, i64 1, align 8
  %16 = alloca i1, i64 3, align 1
  %17 = alloca ptr, i64 3, align 8
  %18 = alloca { i1, i64, ptr, ptr }, i64 1, align 8
  %19 = alloca i1, i64 3, align 1
  %20 = alloca ptr, i64 3, align 8
  %21 = alloca { i1, i64, ptr, ptr }, i64 1, align 8
  %22 = alloca i1, i64 3, align 1
  %23 = alloca ptr, i64 3, align 8
  %24 = alloca { i1, i64, ptr, ptr }, i64 1, align 8
  %25 = alloca i1, i64 3, align 1
  %26 = alloca ptr, i64 3, align 8
  %27 = alloca { i1, i64, ptr, ptr }, i64 1, align 8
  %28 = alloca i1, i64 3, align 1
  %29 = alloca ptr, i64 3, align 8
  %30 = alloca { i1, i64, ptr, ptr }, i64 1, align 8
  call void @__catalyst__rt__device_init(ptr @"/usr/local/lib/python3.12/dist-packages/pennylane_lightning/liblightning_qubit_catalyst.so", ptr @LightningSimulator, ptr @"{'mcmc': False, 'num_burnin': 0, 'kernel_name': None}", i64 0, i1 false)
  %31 = call ptr @__catalyst__rt__qubit_allocate_array(i64 4)
  %32 = call ptr @__catalyst__rt__array_get_element_ptr_1d(ptr %31, i64 0)
  %33 = load ptr, ptr %32, align 8
  call void @__catalyst__qis__Hadamard(ptr %33, ptr null)
  %34 = call ptr @__catalyst__rt__array_get_element_ptr_1d(ptr %31, i64 1)
  %35 = load ptr, ptr %34, align 8
  call void @__catalyst__qis__Hadamard(ptr %35, ptr null)
  %36 = call ptr @__catalyst__rt__array_get_element_ptr_1d(ptr %31, i64 2)
  %37 = load ptr, ptr %36, align 8
  call void @__catalyst__qis__Hadamard(ptr %37, ptr null)
  %38 = call ptr @__catalyst__rt__array_get_element_ptr_1d(ptr %31, i64 3)
  %39 = load ptr, ptr %38, align 8
  call void @__catalyst__qis__Hadamard(ptr %39, ptr null)
  call void @__catalyst__qis__PauliX(ptr %39, ptr null)
  %40 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %30, i32 0, i32 0
  %41 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %30, i32 0, i32 1
  %42 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %30, i32 0, i32 2
  %43 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %30, i32 0, i32 3
  store ptr %33, ptr %29, align 8
  store i1 false, ptr %28, align 1
  %44 = getelementptr inbounds ptr, ptr %29, i32 1
  store ptr %35, ptr %44, align 8
  %45 = getelementptr inbounds i1, ptr %28, i32 1
  store i1 false, ptr %45, align 1
  %46 = getelementptr inbounds ptr, ptr %29, i32 2
  store ptr %37, ptr %46, align 8
  %47 = getelementptr inbounds i1, ptr %28, i32 2
  store i1 false, ptr %47, align 1
  store i1 false, ptr %40, align 1
  store i64 3, ptr %41, align 4
  store ptr %29, ptr %42, align 8
  store ptr %28, ptr %43, align 8
  call void @__catalyst__qis__PauliZ(ptr %39, ptr %30)
  call void @__catalyst__qis__PauliX(ptr %39, ptr null)
  %48 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %27, i32 0, i32 0
  %49 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %27, i32 0, i32 1
  %50 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %27, i32 0, i32 2
  %51 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %27, i32 0, i32 3
  store ptr %33, ptr %26, align 8
  store i1 true, ptr %25, align 1
  %52 = getelementptr inbounds ptr, ptr %26, i32 1
  store ptr %35, ptr %52, align 8
  %53 = getelementptr inbounds i1, ptr %25, i32 1
  store i1 true, ptr %53, align 1
  %54 = getelementptr inbounds ptr, ptr %26, i32 2
  store ptr %37, ptr %54, align 8
  %55 = getelementptr inbounds i1, ptr %25, i32 2
  store i1 true, ptr %55, align 1
  store i1 false, ptr %48, align 1
  store i64 3, ptr %49, align 4
  store ptr %26, ptr %50, align 8
  store ptr %25, ptr %51, align 8
  call void @__catalyst__qis__PauliZ(ptr %39, ptr %27)
  call void @__catalyst__qis__Hadamard(ptr %33, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %35, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %37, ptr null)
  call void @__catalyst__qis__PauliZ(ptr %39, ptr null)
  %56 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %24, i32 0, i32 0
  %57 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %24, i32 0, i32 1
  %58 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %24, i32 0, i32 2
  %59 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %24, i32 0, i32 3
  store ptr %33, ptr %23, align 8
  store i1 false, ptr %22, align 1
  %60 = getelementptr inbounds ptr, ptr %23, i32 1
  store ptr %35, ptr %60, align 8
  %61 = getelementptr inbounds i1, ptr %22, i32 1
  store i1 false, ptr %61, align 1
  %62 = getelementptr inbounds ptr, ptr %23, i32 2
  store ptr %37, ptr %62, align 8
  %63 = getelementptr inbounds i1, ptr %22, i32 2
  store i1 false, ptr %63, align 1
  store i1 false, ptr %56, align 1
  store i64 3, ptr %57, align 4
  store ptr %23, ptr %58, align 8
  store ptr %22, ptr %59, align 8
  call void @__catalyst__qis__PauliX(ptr %39, ptr %24)
  call void @__catalyst__qis__Hadamard(ptr %33, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %35, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %37, ptr null)
  call void @__catalyst__qis__PauliZ(ptr %39, ptr null)
  call void @__catalyst__qis__GlobalPhase(double 0x400921FB54442D18, ptr null)
  call void @__catalyst__qis__PauliX(ptr %39, ptr null)
  %64 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %21, i32 0, i32 0
  %65 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %21, i32 0, i32 1
  %66 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %21, i32 0, i32 2
  %67 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %21, i32 0, i32 3
  store ptr %33, ptr %20, align 8
  store i1 false, ptr %19, align 1
  %68 = getelementptr inbounds ptr, ptr %20, i32 1
  store ptr %35, ptr %68, align 8
  %69 = getelementptr inbounds i1, ptr %19, i32 1
  store i1 false, ptr %69, align 1
  %70 = getelementptr inbounds ptr, ptr %20, i32 2
  store ptr %37, ptr %70, align 8
  %71 = getelementptr inbounds i1, ptr %19, i32 2
  store i1 false, ptr %71, align 1
  store i1 false, ptr %64, align 1
  store i64 3, ptr %65, align 4
  store ptr %20, ptr %66, align 8
  store ptr %19, ptr %67, align 8
  call void @__catalyst__qis__PauliZ(ptr %39, ptr %21)
  call void @__catalyst__qis__PauliX(ptr %39, ptr null)
  %72 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %18, i32 0, i32 0
  %73 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %18, i32 0, i32 1
  %74 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %18, i32 0, i32 2
  %75 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %18, i32 0, i32 3
  store ptr %33, ptr %17, align 8
  store i1 true, ptr %16, align 1
  %76 = getelementptr inbounds ptr, ptr %17, i32 1
  store ptr %35, ptr %76, align 8
  %77 = getelementptr inbounds i1, ptr %16, i32 1
  store i1 true, ptr %77, align 1
  %78 = getelementptr inbounds ptr, ptr %17, i32 2
  store ptr %37, ptr %78, align 8
  %79 = getelementptr inbounds i1, ptr %16, i32 2
  store i1 true, ptr %79, align 1
  store i1 false, ptr %72, align 1
  store i64 3, ptr %73, align 4
  store ptr %17, ptr %74, align 8
  store ptr %16, ptr %75, align 8
  call void @__catalyst__qis__PauliZ(ptr %39, ptr %18)
  call void @__catalyst__qis__Hadamard(ptr %33, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %35, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %37, ptr null)
  call void @__catalyst__qis__PauliZ(ptr %39, ptr null)
  %80 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %15, i32 0, i32 0
  %81 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %15, i32 0, i32 1
  %82 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %15, i32 0, i32 2
  %83 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %15, i32 0, i32 3
  store ptr %33, ptr %14, align 8
  store i1 false, ptr %13, align 1
  %84 = getelementptr inbounds ptr, ptr %14, i32 1
  store ptr %35, ptr %84, align 8
  %85 = getelementptr inbounds i1, ptr %13, i32 1
  store i1 false, ptr %85, align 1
  %86 = getelementptr inbounds ptr, ptr %14, i32 2
  store ptr %37, ptr %86, align 8
  %87 = getelementptr inbounds i1, ptr %13, i32 2
  store i1 false, ptr %87, align 1
  store i1 false, ptr %80, align 1
  store i64 3, ptr %81, align 4
  store ptr %14, ptr %82, align 8
  store ptr %13, ptr %83, align 8
  call void @__catalyst__qis__PauliX(ptr %39, ptr %15)
  call void @__catalyst__qis__Hadamard(ptr %33, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %35, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %37, ptr null)
  call void @__catalyst__qis__PauliZ(ptr %39, ptr null)
  call void @__catalyst__qis__GlobalPhase(double 0x400921FB54442D18, ptr null)
  call void @__catalyst__qis__PauliX(ptr %39, ptr null)
  %88 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %12, i32 0, i32 0
  %89 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %12, i32 0, i32 1
  %90 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %12, i32 0, i32 2
  %91 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %12, i32 0, i32 3
  store ptr %33, ptr %11, align 8
  store i1 false, ptr %10, align 1
  %92 = getelementptr inbounds ptr, ptr %11, i32 1
  store ptr %35, ptr %92, align 8
  %93 = getelementptr inbounds i1, ptr %10, i32 1
  store i1 false, ptr %93, align 1
  %94 = getelementptr inbounds ptr, ptr %11, i32 2
  store ptr %37, ptr %94, align 8
  %95 = getelementptr inbounds i1, ptr %10, i32 2
  store i1 false, ptr %95, align 1
  store i1 false, ptr %88, align 1
  store i64 3, ptr %89, align 4
  store ptr %11, ptr %90, align 8
  store ptr %10, ptr %91, align 8
  call void @__catalyst__qis__PauliZ(ptr %39, ptr %12)
  call void @__catalyst__qis__PauliX(ptr %39, ptr null)
  %96 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %9, i32 0, i32 0
  %97 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %9, i32 0, i32 1
  %98 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %9, i32 0, i32 2
  %99 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %9, i32 0, i32 3
  store ptr %33, ptr %8, align 8
  store i1 true, ptr %7, align 1
  %100 = getelementptr inbounds ptr, ptr %8, i32 1
  store ptr %35, ptr %100, align 8
  %101 = getelementptr inbounds i1, ptr %7, i32 1
  store i1 true, ptr %101, align 1
  %102 = getelementptr inbounds ptr, ptr %8, i32 2
  store ptr %37, ptr %102, align 8
  %103 = getelementptr inbounds i1, ptr %7, i32 2
  store i1 true, ptr %103, align 1
  store i1 false, ptr %96, align 1
  store i64 3, ptr %97, align 4
  store ptr %8, ptr %98, align 8
  store ptr %7, ptr %99, align 8
  call void @__catalyst__qis__PauliZ(ptr %39, ptr %9)
  call void @__catalyst__qis__Hadamard(ptr %33, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %35, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %37, ptr null)
  call void @__catalyst__qis__PauliZ(ptr %39, ptr null)
  %104 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %6, i32 0, i32 0
  %105 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %6, i32 0, i32 1
  %106 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %6, i32 0, i32 2
  %107 = getelementptr inbounds { i1, i64, ptr, ptr }, ptr %6, i32 0, i32 3
  store ptr %33, ptr %5, align 8
  store i1 false, ptr %4, align 1
  %108 = getelementptr inbounds ptr, ptr %5, i32 1
  store ptr %35, ptr %108, align 8
  %109 = getelementptr inbounds i1, ptr %4, i32 1
  store i1 false, ptr %109, align 1
  %110 = getelementptr inbounds ptr, ptr %5, i32 2
  store ptr %37, ptr %110, align 8
  %111 = getelementptr inbounds i1, ptr %4, i32 2
  store i1 false, ptr %111, align 1
  store i1 false, ptr %104, align 1
  store i64 3, ptr %105, align 4
  store ptr %5, ptr %106, align 8
  store ptr %4, ptr %107, align 8
  call void @__catalyst__qis__PauliX(ptr %39, ptr %6)
  call void @__catalyst__qis__PauliZ(ptr %39, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %33, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %35, ptr null)
  call void @__catalyst__qis__Hadamard(ptr %37, ptr null)
  call void @__catalyst__qis__GlobalPhase(double 0x400921FB54442D18, ptr null)
  %112 = call ptr @_mlir_memref_to_llvm_alloc(i64 128)
  %113 = insertvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } poison, ptr %112, 0
  %114 = insertvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %113, ptr %112, 1
  %115 = insertvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %114, i64 0, 2
  %116 = insertvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %115, i64 16, 3, 0
  %117 = insertvalue { ptr, ptr, i64, [1 x i64], [1 x i64] } %116, i64 1, 4, 0
  store { ptr, ptr, i64, [1 x i64], [1 x i64] } %117, ptr %3, align 8
  call void (ptr, i64, ...) @__catalyst__qis__Probs(ptr %3, i64 4, ptr %33, ptr %35, ptr %37, ptr %39)
  call void @__catalyst__rt__qubit_release_array(ptr %31)
  call void @__catalyst__rt__device_release()
  ret { ptr, ptr, i64, [1 x i64], [1 x i64] } %117
}

define void @setup() {
  call void @__check_fuel(i64 800)
  %1 = load i64, ptr @__runtime_signature, align 8
  %2 = xor i64 %1, 2145513512370476857
  store i64 %2, ptr @__runtime_signature, align 8
  call void @__catalyst__rt__initialize(ptr null)
  ret void
}

define void @teardown() {
  call void @__check_fuel(i64 400)
  %1 = load i64, ptr @__runtime_signature, align 8
  %2 = xor i64 %1, 2145513512370476857
  store i64 %2, ptr @__runtime_signature, align 8
  call void @__catalyst__rt__finalize()
  ret void
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias writeonly captures(none), ptr noalias readonly captures(none), i64, i1 immarg) #0

define void @__check_fuel(i64 %0) {
entry:
  %1 = load i64, ptr @__fuel_remaining, align 8
  %2 = sub i64 %1, %0
  store i64 %2, ptr @__fuel_remaining, align 8
  %3 = icmp slt i64 %2, 0
  br i1 %3, label %exit, label %continue

exit:                                             ; preds = %entry
  %4 = load i64, ptr @__runtime_signature, align 8
  store i64 %4, ptr @__runtime_signature, align 8
  ret void

continue:                                         ; preds = %entry
  ret void
}

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }

!llvm.module.flags = !{!0}

!0 = !{i32 2, !"Debug Info Version", i32 3}